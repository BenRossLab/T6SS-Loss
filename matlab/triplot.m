function triplot(ap,ar,g,xx)

% Takes parameters for cost of production (ap), cost of resistance (ar), and density (g) 
% Takes trajectories generated by integrating differential equations
% Generates triangle plots (flow field, stable points trajectory)

% Colors associated with each phenotype
CP = [0.8470588235294118, 0.10588235294117647, 0.3764705882352941];     % Producer: Magenta
CR = [0.11764705882352941, 0.5333333333333333, 0.8980392156862745];     % Resistant: Blue
CS = [0.8823529411764706, 0.7568627450980392, 0.027450980392156862];    % Sensitive: Yellow

% Generates a triangular grid of length 10 (XY coordinates)
n=10;
t = [[0, 0.5, 1]; [0, sqrt(3)/2, 0]];
ng = ( ( n + 1 ) * ( n + 2 ) ) / 2;
tg = zeros ( 2, ng );

p = 0;
for i = 0 : n
for j = 0 : n - i
  k = n - i - j;
  p = p + 1;
  tg(1:2,p) = ( i * t(1:2,1) + j * t(1:2,2) + k * t(1:2,3) ) / n;
end
end

% Calculates genotype abundances at a given grid point
abundances=@(x,y) [1-x-y/sqrt(3), x-y/sqrt(3), 2*y/sqrt(3)];

% Converts gradient in genotype abundances into triangle form 
components=@(a,b,c) [3*(b-a)/4, sqrt(3)*(2*c-b-a)/4];

% Differential equations
X=@(p,r,s) p*(1-ap)+r*(1-ar)+s;
dp=@(p,r,s) p.*(1-ap-X(p,r,s));     % producer  (component c)
dr=@(p,r,s) r.*(1-ar-X(p,r,s));     % resistant (component b)
ds=@(p,r,s) s.*(1-X(p,r,s)-g*p);    % sensitive (component a)

% Calculates flow at each point in the grid
N=length(tg);
aa=zeros(3,1);
cc=zeros(2,N);
for n=1:N

    % Abundances
    aa=abundances(tg(1,n),tg(2,n));
    p=aa(3);
    r=aa(2);
    s=aa(1);
    
    % Gradient
    pp=dp(aa(3),aa(2),aa(1));
    rr=dr(aa(3),aa(2),aa(1));
    ss=ds(aa(3),aa(2),aa(1));

    % This normalization is necessary so the corrected gradient keeps the
    % abundances adding to 1. This is necessary for the triangle plots.
    ppp=pp-p*(pp+rr+ss);
    rrr=rr-r*(pp+rr+ss);
    sss=ss-s*(pp+rr+ss);
    
    % XY component of flow
    cc(:,n)=components(sss,rrr,ppp);

end

% Normalize trajectoy abundances at each time point so they add to 1 
w=sum(xx,2);
for i=1:3
xx(:,i)=xx(:,i)./w;
end

% Calculates XY positions of trajectory for the triangle plot.
position=@(a,b,c) [b+c/2, sqrt(3)*c/2];
xy=position(xx(:,3),xx(:,2),xx(:,1));

% Plots triangle
hold on
plot([0 0.5],[0 sqrt(3)/2],'k')
plot([0 1],[0 0],'k')
plot([0.5 1],[sqrt(3)/2 0],'k')

% Plots stable points
plot(0.5,sqrt(3)/2,'o','Color',CP,'MarkerSize',15,'LineWidth',5)
plot(1,0,'o','Color',CR,'MarkerSize',15,'LineWidth',5)
plot(0,0,'o','Color',CS,'MarkerFaceColor',CS,'MarkerSize',15,'LineWidth',5)
xxx=(ap/g)*[1/2 sqrt(3)/2];
plot(xxx(1),xxx(2),'ko','MarkerSize',10,'LineWidth',3)

% Plots trajectory
plot(xy(:,1),xy(:,2),'Color',[0.5 0.75 0.5],'LineWidth',3)

% Plots flow field
quiver(tg(1,:),tg(2,:),cc(1,:),cc(2,:),'k','LineWidth',2)
axis off
set(gcf, 'renderer', 'painters')
